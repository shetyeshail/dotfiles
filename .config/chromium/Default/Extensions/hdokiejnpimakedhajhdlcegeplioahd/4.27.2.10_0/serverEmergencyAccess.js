LPServer.emergencyAccess=function(){var e="legacy_helper.php",r="lmiapi/emergency-access",a=function(r){var a=new LPServer.ext.RSAKey;LPServer.ext.parsePublicKey(a,r.params.recipient.publickey);var n=a.encrypt(LPServer.ext.bin2hex(LPServer.ext.getLocalKey()));LPServer.jsonRequest({url:e,data:{action:"update_sharee",semail:r.params.recipient.username,enc_key:n,prio:1,hours:r.params.recipient.hours_to_override},userSupplied:r})},n=(s=function(e,r){e.errors instanceof Array&&e.errors.length>0?r.callbacks&&r.callbacks.nosharingkeys?r.callbacks.nosharingkeys(e,r):r.error("nosharingkeys"):e.noemail instanceof Array&&e.noemail.length>0?(r.callbacks&&r.callbacks.invite&&r.callbacks.invite({emails:e.noemail}),r.error("")):e[r.params.recipient.username]?(r.params.recipient.publickey=e[r.params.recipient.username],a(r)):r.error()},function(r){LPServer.jsonRequest({url:e,data:{action:"get_pubkey",emails:r.params.recipient.username},success:s,userSupplied:r})}),s,c,i,t,u,l,o=(p=function(e,r){r.callbacks&&r.callbacks.successGranted&&r.callbacks.successGranted(e,r)},m=function(e,r){r.callbacks&&r.callbacks.successLinked&&r.callbacks.successLinked(e,r)},d=function(r,a){var n=new LPServer.ext.RSAKey;LPServer.ext.parsePrivateKey(n);var s=n.decrypt(r.enc_key);LPServer.xmlRequest({url:e,data:{action:"link",name:a.params.sharer.username,legacy:1,sharekey:r.enc_key,sharename:LPServer.ext.encrypt(a.params.sharer.username,LPServer.ext.hex2bin(s))},callbacks:{ok:m},userSupplied:a})},function(r){LPServer.jsonRequest({url:e,data:{action:"confirm",lemail:r.params.sharer.username},callbacks:{success:p,allowed:d},userSupplied:r})}),p,m,d,f,S,v=function(e){if(!e||!e.length||!g_uid)return!1;LPServer.lmiapi.jsonRequest({url:r+"/sharees",method:"POST",data:e})},y=function(e,a){LPServer.lmiapi.jsonRequest({url:r+"/sharees",type:"GET",contentType:"application/json",dataType:"json",success:function(r){e&&e(r)},error:function(e){"undefined"!=typeof Raven&&Raven.captureException(e,{extra:{uid:g_uid}}),a&&a()}})},h;return{updateRecipient:a,addRecipient:n,removeRecipient:function(r){LPServer.jsonRequest({url:e,data:{action:"revoke_offer",email:r.params.email},userSupplied:r})},getRecipientInfo:function(r){LPServer.jsonRequest({url:e,data:{action:"get_sharees",lemail:r.params.email},userSupplied:r})},getSharerInfo:function(r){LPServer.jsonRequest({url:e,data:{action:"get_sharers"},userSupplied:r})},acceptOffer:function(r){LPServer.jsonRequest({url:e,data:{action:"accept_offer",email:r.params.sharer.username},userSupplied:r})},declineOffer:function(r){LPServer.jsonRequest({url:e,data:{action:"decline_offer",email:r.params.email},userSupplied:r})},requestAccess:o,denyAccess:function(r){LPServer.jsonRequest({url:e,data:{action:"deny_access",email:r.params.email},userSupplied:r})},unlinkAccount:function(r){LPServer.jsonRequest({url:e,data:{action:"unlink",lemail:r.params.email},userSupplied:r})},updateShareeKey:v,getEmergencyAccessShareeData:y,checkEmergencyAccessHealth:function(){y(function(e){if(e){var r=[];e.forEach(function(e){var a=e.publicSharingKey;if(a&&e.updateRequired){var n=new RSAKey;if(parse_public_key(n,a)){var s=n.encrypt(LPServer.ext.bin2hex(LPServer.ext.getLocalKey()));r.push({userId:e.userId,encryptedVaultKey:s})}}}),r.length&&v(r)}})}}}();
//# sourceMappingURL=sourcemaps/serverEmergencyAccess.js.map
