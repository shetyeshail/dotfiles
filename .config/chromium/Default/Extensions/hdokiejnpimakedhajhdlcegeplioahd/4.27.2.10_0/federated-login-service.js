var FederatedLoginService=function(){var e;return function(){var e=this;e.isFederated=function(e,t,n){r(e,function(e){t(e.type>0,e.type)},n)},e._handleError=function(e,r){e&&e(r?r.toString():""),r&&setTimeout(function(){throw r},0)},e._getAuthInfo=function(n,o,a,i){r(n,function(r){e._ajax({type:"GET",dataType:"json",url:r.IdentityProviderURL+"/auth/saml2/getauthinfo/"+o,success:a,error:t(i)})},i)},e._initiate=function(t,n,a){r(t,function(r){switch(r.type){case 3:n(r);break;case 2:o(t,r,function(e){n(r,e)},a);break;case 1:n(r);break;default:e._handleError(a,new Error("User is not provisioned for federated login"))}},a)},e._decryptK1WithPrivateKey=function(e,r){return r.decrypt(e,"RSA-OAEP",{md:forge.md.sha384.create()})},e._assemblePassword=function(r,n,o,s,c){var u=atob(o.k1),f=atob(o.k2);n&&(u=e._decryptK1WithPrivateKey(u,n.privateKey));var p=i(u,f);e._ajax({type:"POST",dataType:"json",contentType:"application/json",url:"lmiapi/login/getLocalKeyPart",data:{username:r,keyHash:a(p),authSessionId:o.authSessionId},success:function(r){r&&r.localKey?s(a(i(p,atob(r.localKey)))):e._handleError(c,new Error("Could not retrieve local key"))},error:t(c)})},e.processMicrosoftGraphApiResponse=function(e){var r;if((r="string"==typeof e?JSON.parse(e):e).extensions)for(var t=0;t<r.extensions.length;t++)if("com.lastpass.keys"===r.extensions[t].id)return r.extensions[t].LastPassK1},e._assemblePasswordForOIDC=function(r,n,o,s,c,u){e._ajax({type:"GET",url:"https://graph.microsoft.com/v1.0/me?$select=id,displayName,mail&$expand=extensions",beforeSend:function(e){e.setRequestHeader("Authorization","Bearer "+n)},success:function(n){var f=e.processMicrosoftGraphApiResponse(n);f?e._ajax({type:"POST",dataType:"json",contentType:"application/json",url:s+"/federatedlogin/api/v1/getkey",data:JSON.stringify({company_id:o,id_token:r}),success:function(r){r&&r.k2?c(a(i(atob(f),atob(r.k2))),void 0,r.fragment_id,a(atob(f))):e._handleError(u,new Error("Could not retrieve K2 from ALP"))},error:t(u)}):e._handleError(u,new Error("Could not retrieve K1 from Azure"))},error:t(u)})},e._keypairSaved=function(){},e._cache={},e.clearCache=function(){e._cache={}};var r=function(r,n,o){e._cache[r]?n(e._cache[r]):e._ajax({type:"GET",dataType:"json",url:"lmiapi/login/type",data:{username:r},success:function(t){t?(e._cache[r]=t,n(t)):e._handleError(o,new Error("Could not retrieve login data: "+t))},error:t(o)})},t=function(r){return function(t,n,o){e._handleError(r,new Error(o))}},n=function(e){forge.rsa.generateKeyPair({bits:2048,workers:2},function(r,t){e(r,t)})},o=function(r,o,a,i){n(function(n,s){n?i(n):e._ajax({type:"POST",dataType:"json",contentType:"application/json",url:"lmiapi/federatedPublicKey/savePublicKey",data:{email:r,publickey:u(s).publicKey},success:function(){e._keypairSaved(s,o),a(s)},error:t(i)})})},a=function(e){var r=forge.md.sha256.create();return r.update(e),btoa(r.digest().bytes())},i=function(e,r){var t=e.length<r.length?e.length:r.length;return forge.util.xorBytes(e,r,t)},s=function(e){return btoa(forge.asn1.toDer(e).getBytes())},c=function(e){return forge.asn1.fromDer(atob(e))},u=function(e){return e?{privateKey:s(forge.pki.privateKeyToAsn1(e.privateKey)),publicKey:s(forge.pki.publicKeyToAsn1(e.publicKey))}:e}}}();
//# sourceMappingURL=sourcemaps/federated-login-service.js.map
